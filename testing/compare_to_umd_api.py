import json
import requests
import time
from urlparse import urlparse

geojson = {"type": "FeatureCollection","features": [{"type": "Feature","properties": {},"geometry": {"type": "Polygon", "coordinates": [[[112.52347809425214, -2.4629252286881287], [112.52375417593427, -2.5017628816946242], [112.51916147519748, -2.5402267045362503], [112.50974204699374, -2.577946263970524], [112.49558330886562, -2.614558288658496], [112.47681732740618, -2.6497101679925885], [112.45361971343202, -2.6830633484981927], [112.42620812990329, -2.7142965950846145], [112.39484041908888, -2.7431090857103273], [112.35981235819803, -2.7692233096203624], [112.3214550556943, -2.792387741195524], [112.28013200376171, -2.8123792636063976], [112.23623580588652, -2.8290053188698887], [112.19018460220374, -2.842105763539243], [112.1424182190733, -2.851554412095351], [112.09339407322184, -2.857260253120008], [112.04358286462103, -2.8591683264916665], [111.9934640959716, -2.857260253120008], [111.94352146012484, -2.851554412095351], [111.894238139886, -2.8421057635392435], [111.84609206731211, -2.829005318869889], [111.79955119173738, -2.8123792636063984], [111.75506880725054, -2.792387741195524], [111.71307899113648, -2.769223309620364], [111.6739922048242, -2.7431090857103277], [111.6381911081168, -2.714296595084616], [111.60602663590022, -2.6830633484981936], [111.57781438413839, -2.6497101679925903], [111.55383134878588, -2.614558288658497], [111.53431305732953, -2.5779462639705244], [111.51945112806735, -2.5402267045362517], [111.50939128702453, -2.5017628816946242], [111.50423186668532, -2.462925228688129], [111.50402280458742, -2.4240877731073645], [111.50876515339806, -2.3856245349570426], [111.5184111074848, -2.3479059250133516], [111.53286454433317, -2.3112951781314286], [111.55198207256961, -2.276144855818887], [111.57557457194386, -2.2427934517202726], [111.60340920452126, -2.211562132664538], [111.63521187064549, -2.182751646622346], [111.6706700780462, -2.15663942731472], [111.70943618787126, -2.1334769233240363], [111.75113099748947, -2.113487177400656], [111.7953476166845, -2.096862679253675], [111.8416555913836, -2.0837635124853295], [111.88960522734892, -2.0743158135003075], [111.9387320653001, -2.0686105572207465], [111.98856145871547, -2.066702681293707], [112.03861320603454, -2.068610557220746], [112.08840619009754, -2.074315813500307], [112.13746297934445, -2.083763512485329], [112.185314347468, -2.096862679253675], [112.23150367078676, -2.1134871774006547], [112.27559116547985, -2.133476923324035], [112.3171579299057, -2.1566394273147185], [112.35580976042468, -2.1827516466223447], [112.39118071236838, -2.2115621326645356], [112.42293638097355, -2.2427934517202703], [112.45077688015866, -2.2761448558188837], [112.47443949992143, -2.311295178131426], [112.49370102584041, -2.3479059250133494], [112.50837970666139, -2.3856245349570395], [112.51833685824398, -2.4240877731073605], [112.52347809425214, -2.4629252286881256], [112.52347809425214, -2.4629252286881287]]]}}]}

def main():

    #test_umd_loss_gain()

    # test_landcover()

    test_loss_by_landcover()


def test_landcover():

    query_params = {'layer': 'gfw-landcover-2015'}
    run_test('landcover', query_params)


def test_umd_loss_gain():

    query_params = {'aggregate_values': False,
                    'period': '2001-01-01,2010-01-01'}
    run_test('umd-loss-gain', query_params)


def test_loss_by_landcover():

    query_params = {'layer': 'primary-forest'}
    run_test('loss-by-landcover', query_params)


def run_test(endpoint, query_params):

    umd_api_url = 'https://production-api.globalforestwatch.org/{}'.format(endpoint)
    lambda_url = 'https://0yvx7602sb.execute-api.us-east-1.amazonaws.com/dev/{}'.format(endpoint)

    post_body = {'geojson': geojson}

    umd_api_resp = run_post(umd_api_url, post_body, query_params)
    lambda_resp = run_post(lambda_url, post_body, query_params)

    print umd_api_resp
    print lambda_resp

    print findDiff(umd_api_resp, lambda_resp)


def run_post(api_url, payload, query_params):
    start = time.time()

    r = requests.post(api_url, json=payload, params=query_params)

    end = time.time()
    base_url = urlparse(api_url).netloc
    print '{0} call took {1:.2f} seconds'.format(base_url, end - start)

    return r.json()

def findDiff(d1, d2, path=""):
    # source: https://stackoverflow.com/a/27266178/4355916

    for k in d1.keys():
        if not d2.has_key(k):
            print path, ":"
            print k + " as key not in d2", "\n"
        else:
            if type(d1[k]) is dict:
                if path == "":
                    path = k
                else:
                    path = path + "->" + k
                findDiff(d1[k],d2[k], path)
            else:
                if d1[k] != d2[k]:
                    print path, ":"
                    print " - ", k," : ", d1[k]
                    print " + ", k," : ", d2[k]


if __name__ == '__main__':
    main()
