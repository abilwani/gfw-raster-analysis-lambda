import json

import grequests

from geop import geo_utils, geoprocessing
from serializers import gfw_api
from utilities import util


def umd_loss_gain(event, context):

    geom = util.get_shapely_geom(event)
    area_ha = geo_utils.get_polygon_area(geom)

    payload = {'geojson': json.loads(event['body'])['geojson']}
    params = event.get('queryStringParameters')

    if not params:
        params = {}

    url = 'https://0yvx7602sb.execute-api.us-east-1.amazonaws.com/dev/analysis'
    request_list = []

    # add specific analysis type for each request
    for analysis_type in ['loss', 'gain', 'extent']:

        new_params = params.copy()
        new_params['analysis'] = analysis_type

        request_list.append(grequests.post(url, json=payload, params=new_params))

    # execute these requests in parallel
    response_list = grequests.map(request_list, size=3)

    return gfw_api.serialize_loss_gain(response_list, area_ha)


def analysis(event, context):

    geom = util.get_shapely_geom(event)
    analysis_type = event['queryStringParameters']['analysis']

    ras_dict = {'loss': 's3://gfw2-data/forest_change/hansen_2016_masked_30tcd/data.vrt',
                'extent': 's3://gfw2-data/forest_cover/2000_treecover/data.vrt',
                'gain': 's3://gfw2-data/forest_change/tree_cover_gain/gaindata_2012/data.vrt'}

    analysis_raster = ras_dict[analysis_type]
    area_raster = 's3://gfw2-data/analyses/area_28m/data.vrt'

    stats = geoprocessing.count_pairs(geom, [analysis_raster, area_raster])

    # unpack the response from the gp function to standard {year: area} dict
    hist = util.unpack_count_histogram(analysis_type, stats)

    return gfw_api.serialize_analysis(analysis_type, hist, event)


def landcover(event, context):

    if event['queryStringParameters'].get('layer') != 'gfw-landcover-2015':
        msg = 'Layer query param must be gfw-landcover-2015 for this example'
        return gfw_api.api_error(msg)

    geom = util.get_shapely_geom(event)
    area_ha = geo_utils.get_polygon_area(geom)

    lulc_raster = 's3://palm-risk-poc/data/gfw-landcover-2015/data.vrt'
    area_raster = 's3://gfw2-data/analyses/area_28m/data.vrt'
    stats = geoprocessing.count_pairs(geom, [lulc_raster, area_raster])

    hist = util.unpack_count_histogram('landcover', stats)

    return gfw_api.serialize_landcover(hist, area_ha)


def loss_by_landcover(event, context):

    geom = util.get_shapely_geom(event)
    area_ha = geo_utils.get_polygon_area(geom)

    if event['queryStringParameters'].get('layer') != 'primary-forest':
        msg = 'Layer query param must be primary-forest for this example'
        return gfw_api.api_error(msg)

    primary_raster = 's3://palm-risk-poc/data/primary/data.vrt'
    loss_raster = 's3://gfw2-data/forest_change/hansen_2016_masked_30tcd/data.vrt'
    area_raster = 's3://gfw2-data/analyses/area_28m/data.vrt'

    raster_list = [primary_raster, loss_raster, area_raster]
    stats = geoprocessing.count_pairs(geom, raster_list)

    hist = util.unpack_count_histogram('loss-by-landcover', stats)

    return gfw_api.serialize_loss_by_landcover(hist, area_ha, event)


# to test locally
if __name__ == '__main__':
    aoi = {"type": "FeatureCollection","features": [{"type": "Feature","properties": {},"geometry": {"type": "Polygon", "coordinates": [[[112.52347809425214, -2.4629252286881287], [112.52375417593427, -2.5017628816946242], [112.51916147519748, -2.5402267045362503], [112.50974204699374, -2.577946263970524], [112.49558330886562, -2.614558288658496], [112.47681732740618, -2.6497101679925885], [112.45361971343202, -2.6830633484981927], [112.42620812990329, -2.7142965950846145], [112.39484041908888, -2.7431090857103273], [112.35981235819803, -2.7692233096203624], [112.3214550556943, -2.792387741195524], [112.28013200376171, -2.8123792636063976], [112.23623580588652, -2.8290053188698887], [112.19018460220374, -2.842105763539243], [112.1424182190733, -2.851554412095351], [112.09339407322184, -2.857260253120008], [112.04358286462103, -2.8591683264916665], [111.9934640959716, -2.857260253120008], [111.94352146012484, -2.851554412095351], [111.894238139886, -2.8421057635392435], [111.84609206731211, -2.829005318869889], [111.79955119173738, -2.8123792636063984], [111.75506880725054, -2.792387741195524], [111.71307899113648, -2.769223309620364], [111.6739922048242, -2.7431090857103277], [111.6381911081168, -2.714296595084616], [111.60602663590022, -2.6830633484981936], [111.57781438413839, -2.6497101679925903], [111.55383134878588, -2.614558288658497], [111.53431305732953, -2.5779462639705244], [111.51945112806735, -2.5402267045362517], [111.50939128702453, -2.5017628816946242], [111.50423186668532, -2.462925228688129], [111.50402280458742, -2.4240877731073645], [111.50876515339806, -2.3856245349570426], [111.5184111074848, -2.3479059250133516], [111.53286454433317, -2.3112951781314286], [111.55198207256961, -2.276144855818887], [111.57557457194386, -2.2427934517202726], [111.60340920452126, -2.211562132664538], [111.63521187064549, -2.182751646622346], [111.6706700780462, -2.15663942731472], [111.70943618787126, -2.1334769233240363], [111.75113099748947, -2.113487177400656], [111.7953476166845, -2.096862679253675], [111.8416555913836, -2.0837635124853295], [111.88960522734892, -2.0743158135003075], [111.9387320653001, -2.0686105572207465], [111.98856145871547, -2.066702681293707], [112.03861320603454, -2.068610557220746], [112.08840619009754, -2.074315813500307], [112.13746297934445, -2.083763512485329], [112.185314347468, -2.096862679253675], [112.23150367078676, -2.1134871774006547], [112.27559116547985, -2.133476923324035], [112.3171579299057, -2.1566394273147185], [112.35580976042468, -2.1827516466223447], [112.39118071236838, -2.2115621326645356], [112.42293638097355, -2.2427934517202703], [112.45077688015866, -2.2761448558188837], [112.47443949992143, -2.311295178131426], [112.49370102584041, -2.3479059250133494], [112.50837970666139, -2.3856245349570395], [112.51833685824398, -2.4240877731073605], [112.52347809425214, -2.4629252286881256], [112.52347809425214, -2.4629252286881287]]]}}]}

    aoi = {
                "type" : "FeatureCollection",
"features" : [{
  "type":"Feature",
  "properties":{"location_id":1},
  "geometry":{
                "type":"Polygon",
                "coordinates":[[[-96.79539999999999,32.794200400535914],[-96.7942185926987,32.794169347064525],[-96.79304175848799,32.79407630685392],[-96.79187405272783,32.79392164004864],[-96.79071999538684,32.79370594533807],[-96.78958405351875,32.793430057635206],[-96.78847062394597,32.79309504484005],[-96.7873840162168,32.792702203699484],[-96.78632843590326,32.79225305478056],[-96.78530796830405,32.79174933657613],[-96.78432656261694,32.79119299876632],[-96.7833880166414,32.79058619466167],[-96.78249596207095,32.78993127285789],[-96.78165385043346,32.78923076813414],[-96.78086493973215,32.78848739163089],[-96.78013228184062,32.787704020345146],[-96.77945871070004,32.7868836859842],[-96.7788468313638,32.78602956322112],[-96.77829900993262,32.785144957397755],[-96.77781736441814,32.78423329172296],[-96.77740375657055,32.78329809401587],[-96.77705978470122,32.78234298304571],[-96.77678677752789,32.781371654521074],[-96.77658578906576,32.78038786678319],[-96.77645759458365,32.779395426258496],[-96.77640268764058,32.778398172727],[-96.77642127821312,32.777399964463626],[-96.77651329192128,32.7764046633097],[-96.77667837035392,32.77541611973287],[-96.77691587249306,32.77443815793283],[-96.77722487723044,32.773474561050584],[-96.77760418696563,32.77252905653853],[-96.7780523322726,32.77160530174763],[-96.7785675776143,32.77070686978742],[-96.7791479280845,32.76983723571351],[-96.77979113714895,32.768999763095685],[-96.7804947153565,32.768197691018415],[-96.78125593998567,32.76743412156391],[-96.78207186558947,32.76671200782592],[-96.78293933539693,32.766034142500374],[-96.78385499352812,32.76540314709669],[-96.78481529797399,32.76482146181157],[-96.78581653429238,32.764291336103696],[-96.78685482996609,32.76381482000601],[-96.78792616936846,32.76339375620881],[-96.78902640927814,32.76302977294393],[-96.79015129488415,32.76272427769752],[-96.79129647621916,32.7624784517755],[-96.79245752495746,32.76229324574249],[-96.79362995151422,32.7621693757518],[-96.79480922237947,32.76210732078059],[-96.79599077762046,32.76210732078059],[-96.79717004848571,32.7621693757518],[-96.79834247504247,32.76229324574249],[-96.79950352378077,32.7624784517755],[-96.80064870511578,32.76272427769752],[-96.80177359072185,32.76302977294393],[-96.80287383063153,32.7633937562088],[-96.80394517003384,32.763814820006004],[-96.80498346570755,32.764291336103696],[-96.80598470202592,32.76482146181157],[-96.8069450064718,32.7654031470967],[-96.807860664603,32.766034142500374],[-96.80872813441052,32.76671200782592],[-96.80954406001426,32.76743412156391],[-96.81030528464343,32.768197691018415],[-96.81100886285097,32.76899976309569],[-96.81165207191542,32.76983723571351],[-96.81223242238563,32.77070686978742],[-96.8127476677274,32.77160530174763],[-96.8131958130343,32.77252905653853],[-96.81357512276954,32.773474561050584],[-96.81388412750685,32.77443815793283],[-96.81412162964601,32.77541611973287],[-96.81428670807865,32.7764046633097],[-96.81437872178681,32.777399964463626],[-96.81439731235935,32.778398172727],[-96.81434240541623,32.779395426258496],[-96.81421421093417,32.78038786678319],[-96.81401322247204,32.781371654521074],[-96.81374021529871,32.78234298304571],[-96.81339624342938,32.78329809401587],[-96.81298263558179,32.78423329172296],[-96.8125009900673,32.785144957397755],[-96.81195316863614,32.78602956322112],[-96.81134128929989,32.7868836859842],[-96.8106677181593,32.787704020345146],[-96.80993506026778,32.78848739163089],[-96.80914614956647,32.78923076813414],[-96.80830403792898,32.7899312728579],[-96.80741198335858,32.79058619466167],[-96.80647343738295,32.79119299876632],[-96.80549203169588,32.79174933657613],[-96.80447156409667,32.79225305478056],[-96.80341598378313,32.792702203699484],[-96.80232937605396,32.793095044840044],[-96.80121594648118,32.793430057635206],[-96.80008000461305,32.79370594533806],[-96.79892594727204,32.79392164004864],[-96.79775824151193,32.79407630685391],[-96.79658140730118,32.794169347064525],[-96.79539999999999,32.794200400535914]]]
  }
  }]
}

    # why this crazy structure? Oh lambda . . . sometimes I wonder
    event = {
             'body': json.dumps({'geojson': aoi}),
             'queryStringParameters': {'aggregate_values': 'false',
                                       'layer': 'primary-forest',
                                       'analysis': 'loss',
                                       'period': '2001-01-01,2010-01-01'}
             }

    umd_loss_gain(event, None)
    # analysis(event, None)
    # landcover(event, None)
    # loss_by_landcover(event, None)
