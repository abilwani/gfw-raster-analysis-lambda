import datetime
from collections import defaultdict

import numpy as np


def main():
	d = {'20917': 490, '20916': 4, '30598': 1014, '30182': 5489, '30181': 1116, '30229': 667, '30053': 358, '20174': 3, '30222': 34, '21005': 541, '30189': 1853, '21084': 604, '20278': 2, '30836': 10, '20077': 26, '30932': 4228, '30421': 611, '30422': 11706, '31029': 2245, '30334': 12082, '30133': 18, '30509': 8039, '31045': 12, '31044': 59, '30134': 282, '30501': 1361, '30117': 68, '30605': 1463, '30190': 33, '30558': 6659, '30597': 2039, '30820': 2098, '20901': 354, '30198': 65, '30590': 3541, '30046': 3252, '20165': 28, '20908': 8, '30214': 1912, '30446': 112, '30901': 1116, '30294': 1302, '21076': 12593, '30981': 2561, '30908': 4, '20205': 75, '20206': 293, '30510': 13428, '20046': 383, '30518': 2495, '31053': 908, '30342': 957, '30109': 1400, '30454': 1859, '30980': 5910, '20996': 64, '30101': 85, '20933': 40, '20932': 1268, '30853': 1507, '30165': 276, '30693': 3679, '30678': 505, '30772': 29, '30997': 3, '20357': 10, '30629': 2570, '20118': 64, '21068': 681, '20350': 712, '30285': 4, '20117': 4, '20110': 5, '21060': 43, '30238': 161, '20197': 3, '30565': 1410, '20190': 7, '30566': 681, '30230': 248, '20198': 14, '30686': 45, '20053': 14, '30118': 799, '30350': 1586, '30614': 3219, '30357': 1199, '20988': 543, '31068': 3720, '30110': 31, '30445': 5471, '30589': 5384, '20980': 4041, '20981': 1566, '30621': 1579, '30662': 26, '30844': 5347, '31005': 1709, '30749': 19059, '30174': 198, '30038': 3574, '21012': 143, '20342': 1431, '20109': 163, '21053': 501, '30669': 436, '20101': 11, '20029': 242, '20182': 850, '30574': 12135, '20181': 126, '20229': 1316, '20022': 19, '30988': 442, '20189': 1342, '30077': 3901, '30205': 203, '30206': 680, '30478': 40717, '30717': 1, '30453': 423, '30933': 61, '30366': 1598, '30470': 1164, '30526': 9151, '31076': 935, '21044': 52, '21045': 51, '30149': 1934, '30309': 1789, '30638': 5928, '30876': 2878, '30141': 442, '31012': 162, '30494': 1, '30469': 4852, '30030': 900, '31021': 5613, '31060': 312, '20134': 31, '30781': 1022, '20334': 6005, '20038': 304, '30805': 10186, '20238': 250, '30973': 9842, '30788': 28, '20030': 91, '20237': 7, '20230': 81, '20037': 1, '30541': 7956, '30069': 1801, '30006': 8638, '20125': 7, '20892': 2, '30005': 94, '21037': 74, '21036': 447, '30860': 121, '30317': 64, '20940': 64, '20941': 1430, '30486': 630, '30326': 747, '20006': 1974, '30996': 502, '30278': 2, '20948': 1, '30398': 4, '20326': 621, '30941': 3590, '30940': 340, '30796': 2554, '30550': 14009, '20245': 2, '30557': 7564, '30262': 12, '30094': 4223, '30868': 256, '20150': 29, '21021': 3786, '30037': 887, '30916': 6, '30869': 347, '30493': 710, '21028': 951, '21029': 950, '20094': 1136, '20126': 155, '30325': 95, '31028': 983, '30740': 2, '20294': 4111, '30813': 9847, '30812': 14, '30892': 173, '20253': 378, '30718': 1492, '30197': 12, '31036': 280, '30917': 675, '30213': 295, '30150': 1051, '30125': 38, '30085': 236, '30253': 172, '20085': 8, '30582': 3560, '30581': 984, '20141': 46, '30741': 3220, '30029': 3162, '30622': 86, '30237': 30, '20149': 183, '21013': 6, '20214': 1243, '30022': 347, '20262': 4, '30804': 8048, '30485': 1760, '20213': 289, '31013': 4, '20309': 109, '30437': 56698, '20069': 123, '30533': 1129, '30732': 7883, '31037': 886, '20973': 3883, '30126': 1550, '30534': 11588, '30245': 1}

	date_dict = {}

	for conf_days, count in d.iteritems():
	    total_days = int(conf_days[1:]) 
	    year = total_days / 365 + 2015
	    julian_day = total_days % 365
	   
	    # https://stackoverflow.com/questions/17216169/ 
	    alert_date = datetime.datetime(year, 1, 1) + datetime.timedelta(julian_day - 1)

	    try:
		date_dict[alert_date] += count
	    except KeyError:
		date_dict[alert_date] = count

	print date_dict
        k = date_dict.keys()
        v = date_dict.values()
        year_dict = grouped([x.year for x in k], v)

        # month --> quarter calc: https://stackoverflow.com/questions/1406131
        quarter_dict = grouped([(x.year, (x.month-1)//3 + 1) for x in k], v)
	month_dict = grouped([(x.year, x.month) for x in k], v)
        week_dict = grouped([(x.year, x.isocalendar()[1]) for x in k], v)
	print week_dict


def grouped(keys, vals):
    # source: https://jakevdp.github.io/blog/2017/03/22/group-by-from-scratch/
    count = defaultdict(int)
    for key, val in zip(keys, vals):
        count[key] += val
    return dict(count)


if __name__ == '__main__':
    main()
    
